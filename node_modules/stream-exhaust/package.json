{
  "_args": [
    [
      {
        "raw": "stream-exhaust@^1.0.1",
        "scope": null,
        "escapedName": "stream-exhaust",
        "name": "stream-exhaust",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/Users/winwanwon/PetMe-CPE333/node_modules/async-done"
    ]
  ],
  "_from": "stream-exhaust@>=1.0.1 <2.0.0",
  "_id": "stream-exhaust@1.0.1",
  "_inCache": true,
  "_location": "/stream-exhaust",
  "_nodeVersion": "0.10.34",
  "_npmUser": {
    "name": "chrisdickinson",
    "email": "chris@neversaw.us"
  },
  "_npmVersion": "2.1.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stream-exhaust@^1.0.1",
    "scope": null,
    "escapedName": "stream-exhaust",
    "name": "stream-exhaust",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/async-done"
  ],
  "_resolved": "https://registry.npmjs.org/stream-exhaust/-/stream-exhaust-1.0.1.tgz",
  "_shasum": "c0c4455e54ce5a179ca8736e73334b4e7fd67553",
  "_shrinkwrap": null,
  "_spec": "stream-exhaust@^1.0.1",
  "_where": "/Users/winwanwon/PetMe-CPE333/node_modules/async-done",
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "bugs": {
    "url": "https://github.com/chrisdickinson/stream-exhaust.git"
  },
  "dependencies": {},
  "description": "Ensure that a stream is flowing data without mutating it",
  "devDependencies": {
    "readable-stream": "^1.0.31",
    "tape": "^2.14.0",
    "through2": "^0.5.1"
  },
  "directories": {},
  "dist": {
    "shasum": "c0c4455e54ce5a179ca8736e73334b4e7fd67553",
    "tarball": "https://registry.npmjs.org/stream-exhaust/-/stream-exhaust-1.0.1.tgz"
  },
  "gitHead": "41f9415b2e1885994badb08e9e4c628c17d74a69",
  "homepage": "https://github.com/chrisdickinson/stream-exhaust.git",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chrisdickinson",
      "email": "chris@neversaw.us"
    }
  ],
  "name": "stream-exhaust",
  "optionalDependencies": {},
  "readme": "# stream-exhaust\n\nEnsure that the provided stream is flowing data, even if the stream hasn't been\npiped to another stream.\n\n```javascript\nvar exhaustively = require('stream-exhaust');\n\nexhaustively(fs.createReadStream(__filename))\n  .on('close', () => { console.log('all done, despite being streams{1+N}!') });\n```\n\n## Prior Art\n\nThis is based on [stream-consume](https://github.com/aroneous/stream-consume)\nby [aroneous](https://github.com/aroneous). It is a separate package because it has\ndifferent semantics:\n\n1. It does not call `.resume()` on streams2+ streams. streams2 streams monkeypatch `.pipe`\nwhen entering flowing mode; avoiding `resume()` avoids that fate.\n2. It does not examine `._readableState`; instead it checks for the presence of `._read`.\n\n## API\n\n### exhaust(Stream s) -> Stream s\n\nTakes a stream, `s`, and returns it. Ensures that the stream is flowing, either by calling\n`.resume()` if the stream is a streams1 stream, or by piping it to a \"black hole\" stream that\ncontinually asks for more data.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chrisdickinson/stream-exhaust.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "1.0.1"
}
